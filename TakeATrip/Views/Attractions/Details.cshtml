@model TakeATrip.Models.Attractions

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/font-awesome.css")
<link href="~/Content/attrDetails.css" rel="stylesheet" />
<script src="~/Scripts/attrDetails.js"></script>
<div>
        <h1>
            @Html.DisplayFor(model => model.Name)
        </h1>
    <div>
        <h3>
            @Html.DisplayFor(model => model.Ranks.First().Rank)
            @if (Model != null)
            {
                <span class="stars">@Model.Ranks.First().Rank</span>
            }                      
        </h3>
        <h4>
            @Html.DisplayFor(model=> model.Category.First().Name)
        </h4>
    </div>
        @Html.HiddenFor(model => model.Location.StartPoint.Latitude)
        @Html.HiddenFor(model => model.Location.StartPoint.Longitude)
        <div id="map"></div>
    <script>
        function initMap() {
            var lat = parseFloat($("#Location_StartPoint_Latitude").val());
            var lng = parseFloat($("#Location_StartPoint_Longitude").val());
            // Create a map object and specify the DOM element for display.
            var uluru = { lat: lat, lng: lng };
            var map = new google.maps.Map(document.getElementById('map'), {
                center: uluru,
                scrollwheel: true,
                zoom: 15

            });
            var marker = new google.maps.Marker({
                position: uluru,
                map: map
            });
        }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBN-U0Blvdbgj7PUv2_IOXL8QLqTdXRcS0&callback=initMap"
            async defer></script>
</div>
<p>
    @Html.ActionLink("Back to Search", "Index")
</p>
